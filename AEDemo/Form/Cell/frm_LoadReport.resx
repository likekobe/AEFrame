<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEsc.LargeGlyph" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>