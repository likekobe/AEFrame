<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADNElEQVRYR82WXUiTYRTHhe67
        qJsgkCghEIRy5HBNTJ22oA3ccGOODR0OI4ciysQwQjCCoCAWQVFeBJEXXSyhiR9sKpRWRHWRlB8rIlDK
        Spv2YcjpnMf32d59vu87R3Xx23Oe85xz/v/34sDyAOCfkjIphf/wwQokgkAWUF8Fn5U0XA44YBExIntT
        vacD6/cLfYs8l1QkBxxAX7I71ZsU1Ef9/M5+rjv2KUI8QAnYu4PObA3UIkDQAB4rhfSyMaBHIBxohI8P
        O5gBOuUy67dvUj9SnY2BagTCQy74NN3FoAE8TmR5ujvuPjfo5F9fyUWVGNAiEB5uhs/PzkWhATxeFp3i
        mM75QBMX13JBQq6BEgTCo57NLy8vghgakJhLZH7oFBcv5WIcOQZUCCyMtW2szPhgZeaqCB8zwPKv6E1A
        FM8Nt3BxFRcifI4DsragCIGFUOevb7O3QMzqXL/kfX60nYk7zcfBZDIlQXqZDBQy8fHuH5F3d2GN83aA
        nZRjebxHKCecPD870snELwRt0PveEcV737ZJ4m5LZcYtKKDm2aA3sv7BD0p5MxYTP/+iBfqI5y3Q7rey
        L3ebKzJuQT41vw52fV1fGoL1xQfwfSkG5cT3eAJoupuJ94WscPZpUxTPvVom3lxXLrkFbMB26AmawfvY
        AZ2I94kd3AMGJn7aUiZ/C3jSYzmqouaGO/rfnikLtE7VCVAcf/c8EufxjjTc1jNxmsNnEpJbQHFbnbqI
        mh39VRuuSQO4Jk+CawIR4iaGAdwTRiGOf6u/qWPiVrORnYmQRloD7VZ1IRWZb5T/tI9XgW28BupDNey0
        C6cN8/aQDrbeeY2OYbp2jIn0BhuVb4HXdqSAiow+zVrtiBYYo2VbsFgLJh4L99hbGRiuaKLiirfgjE2V
        T0UnLqlXdYMqiFEsQpwT16hAf1nNRHqC9dltARVtl66g5f/fAk5GA7naglZL6SEukkhaA7naAprDBVKR
        0kCutkBKnEgykKstaHOUSIoTSQaoebt0OIsL+FApkgwohQYgu1K9SYF9O3NhIIA4kT2p3tNB9UJfgOeS
        iuSAAzTIMML+HyqE+jR8VtLwvwvk/QE0sv2ZkYiBagAAAABJRU5ErkJggg==
</value>
  </data>
</root>